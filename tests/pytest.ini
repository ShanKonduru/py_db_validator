
[pytest]
markers=
    unit: Unit tests for individual functions
    integration: Integration tests between components
    smoke: Quick smoke tests
    regression: Regression tests to prevent feature breakage
    performance: Performance and load tests
    security: Security-related tests
    edge: Edge case tests
    negative: Negative tests to ensure proper error handling
    positive: Positive tests to ensure expected behavior
    api: API endpoint tests        
    db: Database-related tests
    ui: User interface tests
    e2e: End-to-end tests
    functional: Functional tests for specific features
    # Report Generator specific marks
    html_generation: Tests specific to HTML report generation
    markdown_generation: Tests specific to Markdown report generation
    multi_sheet: Tests for multi-sheet report functionality
    statistics: Tests for statistical calculations
    formatting: Tests for output formatting
    failure_analysis: Tests for failure analysis features
    success_scenario: Tests for all-pass scenarios
    special_characters: Tests for special character handling
    unicode_handling: Tests for Unicode character support
    large_dataset: Tests with large amounts of data
    stress_test: High-load stress testing
    initialization: Tests for object initialization
    structure: Tests for report structure validation
    invalid_input: Tests with invalid input parameters
    none_values: Tests with None/null values
    empty_breakdown: Tests with empty data structures
    long_content: Tests with very long text content
    malformed_data: Tests with malformed or incomplete data
    zero_duration: Tests with zero time durations
    extreme_values: Tests with extreme value ranges
    edge_case: Tests for boundary conditions and unusual scenarios
    # Additional marks for comprehensive test coverage
    controller: Tests for controller pattern implementations
    excel_processing: Tests for Excel file processing
    validation: Tests for data validation logic
    utility: Tests for utility functions and helpers
    statistical: Tests for statistical operations
    dataclass: Tests for dataclass functionality
    data_structures: Tests for data structure operations
    output: Tests for output generation and formatting
    filtering: Tests for filtering and search functionality
    file_handling: Tests for file operations
    data_reading: Tests for data reading operations
    test_cases: Tests for test case management
    template_generation: Tests for template generation
    configuration: Tests for configuration handling
    headers: Tests for header validation
    constants: Tests for constant definitions
    constraints: Tests for constraint validation
    categories: Tests for category management
    messages: Tests for message handling
    boolean_logic: Tests for boolean logic operations
    enums: Tests for enumeration handling
    # Additional specialized marks
    tags: Tests for tag functionality
    parameters: Tests for parameter handling
    error_handling: Tests for error handling scenarios
    # Template generation specific marks
    documentation: Tests for documentation and instructions
    structure: Tests for structural integrity
    formatting: Tests for formatting and styling
    # Execution specific marks
    test_execution: Tests for test execution functionality
    
[coverage:run]
source = .
omit = 
    */venv/*
    */tests/*
    */test_*
    */conftest.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError    
    